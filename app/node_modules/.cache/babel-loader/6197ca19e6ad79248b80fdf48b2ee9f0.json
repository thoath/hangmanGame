{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucas.luz\\\\Documents\\\\Meta\\\\HangmanService\\\\app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport logo from './logo.png';\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      elements: 0\n    };\n    this.newWord = {\n      response: {}\n    };\n  }\n\n  async componentDidMount() {\n    const response = await fetch('/api/newGame');\n    const body = await response.json();\n    this.setState({\n      elements: body,\n      isLoading: false\n    });\n  }\n\n  async getNewWord() {\n    const response = await fetch('/checkCharacter/L');\n    const body = await response.json();\n    this.setNewWord({\n      response: body\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          elements = _this$state.elements,\n          isLoading = _this$state.isLoading;\n    const response = this.newWord;\n    let rows = [];\n\n    for (let i = 0; i < elements; i++) {\n      rows.push(' __ ');\n    }\n\n    if (isLoading) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    this.getNewWord();\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"App-intro\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), rows, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), \"Letras usadas \", response.characterUsed)));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\lucas.luz\\Documents\\Meta\\HangmanService\\app\\src\\App.js"],"names":["React","Component","logo","App","state","isLoading","elements","newWord","response","componentDidMount","fetch","body","json","setState","getNewWord","setNewWord","render","rows","i","push","characterUsed"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;;AAGA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BG,KAF0B,GAElB;AACNC,MAAAA,SAAS,EAAE,IADL;AAENC,MAAAA,QAAQ,EAAE;AAFJ,KAFkB;AAAA,SAO1BC,OAP0B,GAOhB;AACVC,MAAAA,QAAQ,EAAG;AADD,KAPgB;AAAA;;AAY1B,QAAMC,iBAAN,GAA0B;AACxB,UAAMD,QAAQ,GAAG,MAAME,KAAK,CAAC,cAAD,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAnB;AACA,SAAKC,QAAL,CAAc;AAAEP,MAAAA,QAAQ,EAAEK,IAAZ;AAAkBN,MAAAA,SAAS,EAAE;AAA7B,KAAd;AACD;;AAGD,QAAMS,UAAN,GAAkB;AACjB,UAAMN,QAAQ,GAAG,MAAME,KAAK,CAAC,mBAAD,CAA5B;AACC,UAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAnB;AACA,SAAKG,UAAL,CAAgB;AAAEP,MAAAA,QAAQ,EAAEG;AAAZ,KAAhB;AACD;;AAEDK,EAAAA,MAAM,GAAG;AAAA,wBACuB,KAAKZ,KAD5B;AAAA,UACAE,QADA,eACAA,QADA;AAAA,UACUD,SADV,eACUA,SADV;AAEP,UAAMG,QAAQ,GAAG,KAAKD,OAAtB;AAEA,QAAIU,IAAI,GAAG,EAAX;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACZ,QAAf,EAAyBY,CAAC,EAA1B,EAA6B;AAC3BD,MAAAA,IAAI,CAACE,IAAL,CAAU,MAAV;AACD;;AAED,QAAId,SAAJ,EAAe;AACb,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD;;AAED,SAAKS,UAAL;AAEA,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAEZ,IAAV;AAAgB,MAAA,SAAS,EAAC,UAA1B;AAAqC,MAAA,GAAG,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,EAGIe,IAHJ,EAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALD,EAMC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAND,oBAOgBT,QAAQ,CAACY,aAPzB,CAFF,CADF,CADF;AAgBD;;AAxDyB;;AA2D5B,eAAejB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.png';\nimport './App.css';\n\n\nclass App extends Component {\n \n  state = {\n    isLoading: true,\n    elements: 0\n  };\n  \n  newWord = {\n\t\tresponse : {}\n\t\t\n  };\n\n  async componentDidMount() {\n    const response = await fetch('/api/newGame');\n    const body = await response.json();\n    this.setState({ elements: body, isLoading: false });\n  }\n  \n  \n  async getNewWord(){\n  \tconst response = await fetch('/checkCharacter/L');\n    const body = await response.json();\n    this.setNewWord({ response: body });\n  }\n\n  render() {\n    const {elements, isLoading} = this.state;\n    const response = this.newWord;\n    \n    let rows = []\n    for(let i=0; i<elements; i++){\n      rows.push(' __ ')\n    }\n    \n    if (isLoading) {\n      return <p>Loading...</p>;\n    }\n\n    this.getNewWord();\n    \n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <div className=\"App-intro\">\n\t          <br/>\n\t          <br/>\n\t            {rows}\n\t            \n\t          <br/>\n\t          <br/>\n\t          Letras usadas {response.characterUsed}\n          </div>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}