{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucas.luz\\\\Documents\\\\Meta\\\\HangmanService\\\\app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport HangManService from './components/hangmanService';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.hangManService = new HangManService();\n    this.nextWord = this.handleClick.bind(this);\n    this.state = {\n      numCharacter: null,\n      errorMessage: null,\n      found: null,\n      characterUsed: null,\n      charactersFound: null,\n      attempts: null,\n      isGameOver: null,\n      isLastWord: null,\n      isWordCompleted: null\n    };\n  }\n\n  async componentDidMount() {\n    this.hangManService.newGame().then(response => {\n      this.hangManService.checkCharacter('L').then(response => {\n        this.hangManService.checkCharacter('D').then(response => {\n          this.hangManService.checkCharacter('E').then(response => {\n            this.setState(response);\n          });\n        });\n      });\n    });\n  }\n\n  async nextWord() {\n    this.hangManService.getNewWord().then(response => {\n      this.setState(response);\n    });\n  }\n\n  async checkCharacter(character) {\n    this.hangManService.checkCharacter(character).then(response => {\n      this.setState(response);\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          numCharacter = _this$state.numCharacter,\n          errorMessage = _this$state.errorMessage,\n          found = _this$state.found,\n          characterUsed = _this$state.characterUsed,\n          charactersFound = _this$state.charactersFound,\n          attempts = _this$state.attempts,\n          isGameOver = _this$state.isGameOver,\n          isLastWord = _this$state.isLastWord,\n          isWordCompleted = _this$state.isWordCompleted;\n    let rows = [];\n\n    for (let i = 0; i < numCharacter; i++) {\n      if (charactersFound) {\n        Object.keys(charactersFound).forEach(function (key) {\n          if (key == i) {\n            rows.push(' ' + charactersFound[key] + ' ');\n          }\n        });\n      }\n\n      if (rows[i] == null) {\n        rows.push(' __ ');\n      }\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App-intro\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), rows, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), errorMessage, React.createElement(\"button\", {\n      onClick: this.nextWord,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Pr\\xF3xima\"))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\lucas.luz\\Documents\\Meta\\HangmanService\\app\\src\\App.js"],"names":["React","Component","HangManService","App","constructor","props","hangManService","nextWord","handleClick","bind","state","numCharacter","errorMessage","found","characterUsed","charactersFound","attempts","isGameOver","isLastWord","isWordCompleted","componentDidMount","newGame","then","response","checkCharacter","setState","getNewWord","character","render","rows","i","Object","keys","forEach","key","push"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport HangManService from './components/hangmanService';\n\nclass App extends Component {\n \n\n  constructor(props) {\n\t    super(props);\n\t    this.hangManService = new HangManService();\n\t    this.nextWord = this.handleClick.bind(this);\n\t    this.state = {\n    \t\tnumCharacter:null,\n    \t\terrorMessage:null,\n    \t\tfound:null,\n    \t\tcharacterUsed:null,\n    \t\tcharactersFound:null,\n    \t\tattempts:null,\n    \t\tisGameOver:null,\n    \t\tisLastWord:null,\n    \t\tisWordCompleted:null\n\t    }\n  }\n\t\n  \n\n  async componentDidMount() {\n\t   this.hangManService.newGame().then(response => {\n\t\t   this.hangManService.checkCharacter('L').then(response => {\n\t\t\t   this.hangManService.checkCharacter('D').then(response => {\n\t\t\t\t   this.hangManService.checkCharacter('E').then(response => {\n\t\t\t\t\t   this.setState(response);\n\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t});\n  }\n  \n  async nextWord() {\n  \t   this.hangManService.getNewWord().then(response => {\n  \t\t   this.setState(response);\n  \t\t});\n   }\n  \n  async checkCharacter(character) {\n  \t   this.hangManService.checkCharacter(character).then(response => {\n  \t\t   this.setState(response);\n  \t\t});\n   }\n  \n  render() {\n    const {numCharacter,errorMessage,found,characterUsed,charactersFound,attempts,isGameOver,isLastWord,isWordCompleted} = this.state;\n    \n    let rows = [];\n    for(let i=0; i<numCharacter; i++){\n    \t\n    \tif (charactersFound) {\n    \t\tObject.keys(charactersFound).forEach(function(key) {\n    \t\t\tif (key == i ) {\n    \t\t\t\trows.push(' '+charactersFound[key]+' ')\n    \t\t\t}\n    \t\t});\n    \t}\n    \t\n      if (rows[i] == null){\n    \t  rows.push(' __ ')\n      }\n      \n    }\n    \n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div className=\"App-intro\">\n\t          <br/>\n\t          <br/>\n\t            {rows}\n\t          <br/>\n\t          <br/>\n\t          {errorMessage}\n\t          <button onClick={this.nextWord}>Pr√≥xima</button>\n          </div>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}